name: assignment4

on:
  workflow_dispatch:  # הפעלה ידנית דרך GitHub

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log Start Time
        run: |
          echo "Start time: $(date -Iminutes)" > log.txt

      - name: Add submitter name
        run: | 
          echo "Submitters: Maayan Wate, May Bouarshan" >> log.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export stock-portfolio service
        uses: docker/build-push-action@v5
        with:
          context: ./stock-portfolio
          file: ./stock-portfolio/Dockerfile
          tags: stock-portfolio:latest
          outputs: type=docker,dest=/tmp/stock_portfolio_image.tar

      - name: Build and export capital-gains service
        uses: docker/build-push-action@v5
        with:
          context: ./capital-gains
          file: ./capital-gains/Dockerfile
          tags: capital-gains:latest
          outputs: type=docker,dest=/tmp/capital_gains_image.tar

      - name: Log build failure
        if: failure()
        run: echo "image not able to be built" >> log.txt

      - name: Log build success
        if: success()
        run: echo "image successfully built" >> log.txt

      - name: Upload Docker images
        uses: actions/upload-artifact@v4
        with:
          name: images
          path: |
            /tmp/stock_portfolio_image.tar
            /tmp/capital_gains_image.tar

      - name: Upload log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-file
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download and load Docker images
        uses: actions/download-artifact@v4
        with:
          name: images
          path: /tmp

      - name: Download log file from build job
        uses: actions/download-artifact@v4
        with:
          name: log-file
          path: .

      - name: Verify downloaded images
        run: ls -l /tmp

      - name: Load Docker images
        run: |
          docker load --input /tmp/stock_portfolio_image.tar
          docker load --input /tmp/capital_gains_image.tar

      - name: Check loaded images
        run: docker image ls

      - name: Start application with Docker Compose
        run: docker compose -f ./docker-compose.yml up -d

      - name: Log container status
        run: |
          if [ $(docker ps -q | wc -l) -gt 0 ]; then
            echo "Container up and running" >> log.txt
          else
            echo "Container failed to run" >> log.txt
          fi

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install pytest requests

      - name: Run tests with pytest
        run: pytest -v tests/assn4_tests.py | tee test_results.txt

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test_results
          path: test_results.txt

      - name: Update log file
        run: |
          if grep -q "FAILED" test_results.txt; then
            echo "tests failed" >> log.txt
          else
            echo "tests succeeded" >> log.txt
          fi

      - name: Upload updated log file
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log-file
          path: log.txt
          overwrite: true

      - name: Shut down Docker Compose
        run: docker compose -f ./docker-compose.yml down

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start application
        run: docker compose -f ./docker-compose.yml up -d

      - name: Wait for services to be ready
        run: sleep 10

      - name: Execute queries from query.txt
        run: |
          touch response.txt
          while IFS= read -r line; do
            service=$(echo "$line" | cut -d':' -f1)
            query=$(echo "$line" | cut -d':' -f2-)
            
            if [ "$service" = "stocks" ]; then
              response=$(curl -s "http://localhost:5001/stocks?$query")
            elif [ "$service" = "capital-gains" ]; then
              response=$(curl -s "http://localhost:5003/capital-gains?$query")
            else
              response="Invalid service name"
            fi

            echo "query: $line" >> response.txt
            echo "response: $response" >> response.txt
          done < query.txt

      - name: Upload query results
        uses: actions/upload-artifact@v4
        with:
          name: query-results
          path: response.txt

      - name: Shut down Docker Compose
        run: docker compose -f ./docker-compose.yml down
